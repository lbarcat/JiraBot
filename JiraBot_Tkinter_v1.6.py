from tkinter import *
from tkinter import messagebox
import base64
from PIL import Image, ImageTk
import io
import webbrowser
from reportlab.pdfgen import canvas
from reportlab.platypus import Paragraph
from reportlab.lib.styles import ParagraphStyle
from reportlab.lib.utils import ImageReader
import tempfile
from datetime import datetime

import jiramain
root = Tk()
user = ""

class Application():

    def __init__(self):
        self.root = root
        self.janela_principal()
        self.frames()
        self.widgets()
        self.Menus()
              
        root.mainloop()
        

    def janela_principal(self):
        self.root.title("JiraBot - Seu Assistente de Jira - v1.6")
        self.root.configure(background="#e4e4e4")
        self.root.geometry("900x500")
        self.root.resizable(False,False)
        #self.root.bind("<Escape>",lambda event: self.root.destroy())
        self.root.bind("<Escape>",lambda event: self.root.destroy() if messagebox.askquestion("Encerrar", "Deseja realmente encerrar o programa?", 
                                 icon=messagebox.WARNING, 
                                 default=messagebox.NO, 
                                 type=messagebox.YESNO) == "yes" else "" )
        
        self.root.bind("<F3>", lambda event: self.gerar_pdf())
        self.root.bind("<F2>", lambda event: self.delete_label())
        self.root.bind("<F1>", lambda event: self.ajuda())
       

    def gerar_pdf(self):
        
        largura_pagina = 595.27  # 21 cm em pontos (1 cm = 28.35 pontos)
        altura_pagina = 841.89  # 29.7 cm em pontos
        nome_arquivo = 'Relatório Simplificado' + datetime.now().strftime("%d-%m-%Y-%H-%M") + '.pdf'

        pdf = canvas.Canvas(nome_arquivo, pagesize=(largura_pagina, altura_pagina))
        largura_disponivel = largura_pagina - 100
        
        # Decodifica os dados da imagem em base64
        image_data = base64.b64decode(self.image_jirabot)

        # Salva a imagem em um arquivo temporário
        with tempfile.NamedTemporaryFile(suffix=".png", delete=False) as img_file:
            img_file.write(image_data)
            img_file.flush()
            img_file.close()
            img_path = img_file.name

        # Cria um objeto ImageReader a partir do arquivo da imagem
        pdf_image = ImageReader(img_path)

        # Adiciona a imagem ao PDF
        pdf.drawImage(pdf_image, x=215, y=760, width=180, height=70)

        #titulo relatorio
        pdf.setFont("Helvetica-Bold", 16)
        pdf.drawString(220, 730, "Relatório Simplificado")

        # obtém o texto do widget Text
        self.label.configure(state='normal')
        text_info = self.label.get('1.0', 'end')
        self.label.configure(state='disabled')

        # adiciona o texto ao arquivo PDF
        x, y = 50, altura_pagina - 50
        y = 700
        style = ParagraphStyle('my_style', fontName='Helvetica', fontSize=12, leading=14)
        for linha in text_info.split('\n'):
            p = Paragraph(linha, style)
            p.wrapOn(pdf, largura_disponivel, altura_pagina)
            p.drawOn(pdf, x, y - p.height)
            y -= p.height + 14  # altura da fonte + leading

            if y < 50:
                pdf.showPage()
                y = altura_pagina - 50

        # salva o arquivo PDF
        pdf.save()
        webbrowser.open(nome_arquivo)

    
    def Menus(self):
        menubar = Menu(self.root)
        self.root.config(menu=menubar)
        filemenu = Menu(menubar)
        filemenu3 = Menu(menubar)

        def Quit(): self.root.destroy()

        menubar.add_cascade(label = "Opções", menu= filemenu)
        menubar.add_cascade(label = "Sobre", menu= filemenu3)

        filemenu.add_command(label="Sair (Esc)", command= Quit)
        filemenu.add_command(label="Ajuda (F1)", command= self.ajuda)
        filemenu.add_command(label="Novo Chat (F2)", command=self.delete_label)
        filemenu.add_command(label="Relatório PDF (F3)", command=self.gerar_pdf)

        filemenu3.add_command(label="Sobre",command=self.janela_about_software)
        filemenu3.add_command(label="Perguntas Disponíveis",command=self.perguntas_disponiveis)
        filemenu3.add_command(label="Suporte Técnico",command=self.suporte_técnico)

    def janela_about_software(self):
        self.root2 = Toplevel(root)
        self.janela_about = self.root2
        self.janela_about.title("Sobre")
        self.janela_about.configure(background="#e4e4e4")
        self.janela_about.geometry("500x470")
        self.janela_about.resizable(False,False)
        self.janela_about.transient(self.root)
        self.janela_about.focus_force()
        self.janela_about.grab_set()

        self.logo_jira1 = PhotoImage(data=base64.b64decode(self.image_jirabot))
        self.logo_jira1 = self.logo_jira1.subsample(1,1)
        self.logo1 = Label(self.root2,image=self.logo_jira1,border=0).place(relx=0.08,rely=0.02)

        self.janela_about = Label(self.root2, text= "Escopo do Projeto:\nProjeto de chat bot para ajudar os usuários do Jira com perguntas frequentes de como utilizar a ferramenta. Inicialmente com um banco de dados simples na primeira versão, com possibilidade de aprimorar respostas para perguntas mais complexas e soluções de problemas.\n \nEste projeto está sendo desenvolvido com: \n - Python 3.10.6\n - ChatGPT API\n - VS Code\n\nDeveloped by.:\nLucas Barcat - Graduando em Engenharia da Computação - Github user: lbarcat\nGuilherme Neves - Graduando em Engenharia da Computação - Github user: nevesgf ",wraplength=450,background="#e4e4e4",font=('Arial',11),justify='left').place(relx=0.05,rely=0.35)
        self.root2.bind("<Escape>",lambda event: self.root2.destroy())

    def perguntas_disponiveis(self):
        webbrowser.open("https://github.com/lbarcat/JiraBot/blob/main/perguntas.md")

    def ajuda(self):
        webbrowser.open("https://github.com/lbarcat/JiraBot")

    def suporte_técnico(self):
        self.root3 = Toplevel(root)
        self.janela_suporte = self.root3
        self.janela_suporte.title("Suporte Técnico")
        self.janela_suporte.configure(background="#e4e4e4")
        self.janela_suporte.geometry("500x410")
        self.janela_suporte.resizable(False,False)
        self.janela_suporte.transient(self.root)
        self.janela_suporte.focus_force()
        self.janela_suporte.grab_set()

        self.logo_jira2 = PhotoImage(data=base64.b64decode(self.image_jirabot))
        self.logo_jira2 = self.logo_jira2.subsample(1,1)
        self.logo1 = Label(self.root3,image=self.logo_jira2,border=0).place(relx=0.08,rely=0.02)

        self.jjanela_suporte = Label(self.root3, text= "Caro usuário,\n\nObrigado por utilizar o JiraBot! Estamos sempre trabalhando para melhorar sua experiência e adicionando novos recursos. O JiraBot está em constante desenvolvimento e estamos abertos a sugestões e comentários.\n\nSe você tiver alguma dúvida ou precisar de ajuda, por favor, não hesite em nos contatar por e-mail em lcbarcat@gmail.com. Estamos sempre disponíveis para ajudar e apreciamos seus comentários.\n\nAtenciosamente, Equipe JiraBot ",wraplength=450,background="#e4e4e4",font=('Arial',11),justify='left').place(relx=0.05,rely=0.42)
        self.root3.bind("<Escape>",lambda event: self.root3.destroy())



    def frames(self):
        self.text_history = []

        self.frame1 = Frame(root,border=4,bg='white')
        self.frame1.place(relx=0.02,rely=0.185,relwidth=0.96,relheight=0.53)
        self.label = Text(self.frame1,background="#d9d9d9")
        self.label.pack(fill='both',expand=True)

        self.label.insert('1.0',"Jirabot: Olá, seja bem vindo ao JiraBot! Como você deseja ser chamado ?")  

        self.scrollbar_label = Scrollbar(root,orient='vertical',command=self.label.yview)
        self.label.configure(yscrollcommand=self.scrollbar_label.set)
        self.scrollbar_label.pack(fill='y')
        self.scrollbar_label.place(relx=0.98, rely=0.185, relwidth=0.01, relheight=0.53)

        self.scrollbar_xlabel = Scrollbar(root,orient='horizontal',command=self.label.xview)
        self.label.configure(xscrollcommand=self.scrollbar_xlabel.set)
        self.scrollbar_xlabel.place(relx=0.02, rely=0.715, relwidth=0.96, relheight=0.017)


        self.frame2 = Frame(root,border=4,bg='white')
        Label(self.root,text='Faça sua pergunta.:',background="#e4e4e4").place(relx=0.02,rely=0.745)
        self.frame2.place(relx=0.02,rely=0.79,relwidth=0.90,relheight=0.17)
        self.f_text = Text(self.frame2)
        self.f_text.pack(fill='both')
           
        self.button_send = Button(root,text="Enter\n>",command=lambda event=None:self.update_label(event),bg='white')
        self.button_send.place(relx=0.922,rely=0.787,relheight=0.175,relwidth=0.06)

        self.f_text.bind("<Return>", self.update_label)
         
    def update_label(self,event):
        global user
        text = self.f_text.get("1.0", "end-1c")
        if text =="":
            messagebox.showinfo("Atenção","Digite algo para iniciar")
        elif user == "":
            user = self.f_text.get("1.0","end-1c")
            
            self.label.insert('end',f"\nJiraBot: Olá {user}! Faça uma pergunta para iniciar.")
            self.label.configure(state='disabled')
            self.f_text.delete("1.0", END) # Limpa o Text
            self.f_text.mark_set(INSERT, "1.0")
            self.label.see('end')
        else:
            self.text_history.append(text)
            self.label.configure(state='normal')
            self.label.insert('end',"\n" + "\n" + user + ": " + text + "\n" + "JiraBot: " + jiramain.get_response(text))
            self.f_text.delete("1.0", END) # Limpa o Text
            self.f_text.mark_set(INSERT, "1.0")
            self.label.see('end')
            self.label.configure(state='disabled')
        return 'break'                    

    def delete_label(self):
        self.label.configure(state='normal')
        self.label.delete('1.0', END)
        self.label.insert('1.0',"JiraBot: Seja bem vindo ao JiraBot! Faça uma pergunta para iniciar.")
        self.label.configure(state='disabled')

    def widgets(self):
        self.image_jirabot = ""
        self.logo_jira = PhotoImage(data=base64.b64decode(self.image_jirabot))
        self.logo_jira = self.logo_jira.subsample(2,2)
        self.logo =Label(root,image=self.logo_jira,border=0)
        self.logo.place(relx=0.745,rely=0.02)

    
        self.button1 = Button(root,text='Iniciar Novo Chat\n(F2)',bd=2,bg='#0254ce',fg='white',
                                font=('Amfibia Black',10,'bold'),command=self.delete_label).place(relx=0.04,rely=0.052,relheight=0.1,relwidth=0.2)

        self.button2 = Button(root,text='Gerar Relatório PDF\n(F3)',bd=2,bg='#0254ce',fg='white',
                        font=('Amfibia Black',10,'bold'),command=self.gerar_pdf).place(relx=0.25,rely=0.052,relheight=0.1,relwidth=0.2)

Application()